#!/usr/bin/env python
import argparse
import logging
import os
import tornado
from quelab_signin import quelab_signin

def parse_args():
    parser = argparse.ArgumentParser(description='Backend for Quelab Sign in webpage')
    parser.add_argument('-k', '--api_key', help='Api Key to use with Wild Apricot')
    parser.add_argument('-s', '--static', default='dist', help='Path to static files to serve for webpage')
    parser.add_argument('-m', '--mqtt_host', default='localhost', help='MQTT host to publish to')
    parser.add_argument('-p', '--port', default=8888, )
    parser.add_argument('-v', '--auto_reload',  action='store_true', help='verbose logging')
    return parser.parse_args()

def set_logging():
    app_log = logging.getLogger("tornado.application")
    app_log.setLevel(logging.INFO)
    access_log = logging.getLogger("tornado.access")
    access_log.setLevel(logging.WARNING)

def make_app(config):
    set_logging()
    return tornado.web.Application([
        (r"/api/signin", quelab_signin.SigninHandler, {'api_key': config.api_key,
                                                       'mqtt_host': config.mqtt_host}),
        (r'/()', tornado.web.StaticFileHandler, {'path': config.static + '/index.html'}),
        (r'/(.*)', tornado.web.StaticFileHandler, {'path': config.static})
    ], autoreload=True)

if __name__ == "__main__":
    config = parse_args()
    app = make_app(config)
    app.listen(config.port)
    tornado.ioloop.IOLoop.current().start()

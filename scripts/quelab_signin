#!/usr/bin/env python
import argparse
import logging
import os
import tornado
from quelab_signin import quelab_signin

def parse_args():
    key = ''
    if os.environ.get('WA_API_KEY'):
        key = os.environ.get('WA_API_KEY')

    parser = argparse.ArgumentParser(description='Backend for Quelab Sign in webpage')
    parser.add_argument('-k', '--api_key', default=key, help="Api Key to use with Wild Apricot: {}".format(key))
    parser.add_argument('-s', '--static', default='dist', help='Path to static files to serve for webpage')
    parser.add_argument('-m', '--mqtt_host', default='localhost', help='MQTT host to publish to')
    parser.add_argument('-p', '--port', default=8888, help="which port to listen on" )
    parser.add_argument('-v', '--auto_reload',  action='store_true', help='verbose logging')

    return parser.parse_args()

def set_logging():
    app_log = logging.getLogger("tornado.application")
    app_log.setLevel(logging.INFO)
    access_log = logging.getLogger("tornado.access")
    access_log.setLevel(logging.WARNING)

def make_app(config):
    settings = {
        "autoreload": config.auto_reload
        }
    set_logging()
    return tornado.web.Application([
        (r"/api/signin", quelab_signin.SigninHandler, {'api_key': config.api_key,
                                                       'mqtt_host': config.mqtt_host}),
        (r'/()', tornado.web.StaticFileHandler, {'path': config.static + '/index.html'}),
        (r'/index.html()', tornado.web.StaticFileHandler, {'path': config.static + '/index.html'}),
        (r'/static/(.*)', tornado.web.StaticFileHandler, {'path': config.static})
    ], **settings)

if __name__ == "__main__":
    config = parse_args()
    app = make_app(config)
    app.listen(config.port)
    tornado.ioloop.IOLoop.current().start()
